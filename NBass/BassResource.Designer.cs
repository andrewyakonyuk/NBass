//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NBass
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class BassResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal BassResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NBass.BassResource", typeof(BassResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Channel was disposed.
        /// </summary>
        internal static string ChannelDisposedMessage {
            get {
                return ResourceManager.GetString("ChannelDisposedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Already Initialized.
        /// </summary>
        internal static string Error_Already {
            get {
                return ResourceManager.GetString("Error_Already", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All is OK.
        /// </summary>
        internal static string Error_BassOk {
            get {
                return ResourceManager.GetString("Error_BassOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Sample Buffer Was Lost - Please Report This!.
        /// </summary>
        internal static string Error_BufferLost {
            get {
                return ResourceManager.GetString("Error_BufferLost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device is busy (eg. in \&quot;exclusive\&quot; use by another process).
        /// </summary>
        internal static string Error_Busy {
            get {
                return ResourceManager.GetString("Error_Busy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BASS_CDInit Has Not Been Successfully Called.
        /// </summary>
        internal static string Error_CDInit {
            get {
                return ResourceManager.GetString("Error_CDInit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t Play the Selected CD Track&quot;.
        /// </summary>
        internal static string Error_CDTrack {
            get {
                return ResourceManager.GetString("Error_CDTrack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CD Has No Volume Control.
        /// </summary>
        internal static string Error_CDVolume {
            get {
                return ResourceManager.GetString("Error_CDVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Codec is not available/supported.
        /// </summary>
        internal static string Error_Codec {
            get {
                return ResourceManager.GetString("Error_Codec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t create the file.
        /// </summary>
        internal static string Error_Create {
            get {
                return ResourceManager.GetString("Error_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The channel is a &apos;decoding channel&apos;.
        /// </summary>
        internal static string Error_Decode {
            get {
                return ResourceManager.GetString("Error_Decode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Device Number.
        /// </summary>
        internal static string Error_Device {
            get {
                return ResourceManager.GetString("Error_Device", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t Find a Free Sound Driver.
        /// </summary>
        internal static string Error_Driver {
            get {
                return ResourceManager.GetString("Error_Driver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MOD music has no sequence data.
        /// </summary>
        internal static string Error_Empty {
            get {
                return ResourceManager.GetString("Error_Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The channel/file has ended.
        /// </summary>
        internal static string Error_Ended {
            get {
                return ResourceManager.GetString("Error_Ended", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported file format.
        /// </summary>
        internal static string Error_FileFormat {
            get {
                return ResourceManager.GetString("Error_FileFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t Open the File.
        /// </summary>
        internal static string Error_FileOpen {
            get {
                return ResourceManager.GetString("Error_FileOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported Format.
        /// </summary>
        internal static string Error_Format {
            get {
                return ResourceManager.GetString("Error_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Sample Rate.
        /// </summary>
        internal static string Error_Freq {
            get {
                return ResourceManager.GetString("Error_Freq", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Handle.
        /// </summary>
        internal static string Error_Handle {
            get {
                return ResourceManager.GetString("Error_Handle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An Illegal Parameter Was Specified.
        /// </summary>
        internal static string Error_IllParam {
            get {
                return ResourceManager.GetString("Error_IllParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An Illegal Type Was Specified.
        /// </summary>
        internal static string Error_IllType {
            get {
                return ResourceManager.GetString("Error_IllType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BASS.Init Has Not Been Successfully Called.
        /// </summary>
        internal static string Error_Init {
            get {
                return ResourceManager.GetString("Error_Init", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t Initialize CD.
        /// </summary>
        internal static string Error_InitCD {
            get {
                return ResourceManager.GetString("Error_InitCD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory Error.
        /// </summary>
        internal static string Error_Memory {
            get {
                return ResourceManager.GetString("Error_Memory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No 3D Support.
        /// </summary>
        internal static string Error_No3d {
            get {
                return ResourceManager.GetString("Error_No3d", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A3D.DLL is Not Installed.
        /// </summary>
        internal static string Error_NoA3D {
            get {
                return ResourceManager.GetString("Error_NoA3D", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No CD in drive.
        /// </summary>
        internal static string Error_NoCD {
            get {
                return ResourceManager.GetString("Error_NoCD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t Get a Free Channel.
        /// </summary>
        internal static string Error_NoChannel {
            get {
                return ResourceManager.GetString("Error_NoChannel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No EAX Support.
        /// </summary>
        internal static string Error_NoEAX {
            get {
                return ResourceManager.GetString("Error_NoEAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Effects are not enabled.
        /// </summary>
        internal static string Error_NoFX {
            get {
                return ResourceManager.GetString("Error_NoFX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Hardware Voices Available.
        /// </summary>
        internal static string Error_NoHW {
            get {
                return ResourceManager.GetString("Error_NoHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Internet connection could be opened.
        /// </summary>
        internal static string Error_NoNet {
            get {
                return ResourceManager.GetString("Error_NoNet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not Paused.
        /// </summary>
        internal static string Error_NoPause {
            get {
                return ResourceManager.GetString("Error_NoPause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not Playing.
        /// </summary>
        internal static string Error_NoPlay {
            get {
                return ResourceManager.GetString("Error_NoPlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not An Audio Track.
        /// </summary>
        internal static string Error_NotAudio {
            get {
                return ResourceManager.GetString("Error_NotAudio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested data is not available.
        /// </summary>
        internal static string Error_NotAvailable {
            get {
                return ResourceManager.GetString("Error_NotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Stream is Not a File Stream (WAV/MP3).
        /// </summary>
        internal static string Error_NotFile {
            get {
                return ResourceManager.GetString("Error_NotFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The channel is playing.
        /// </summary>
        internal static string Error_Playing {
            get {
                return ResourceManager.GetString("Error_Playing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Playback Position.
        /// </summary>
        internal static string Error_Position {
            get {
                return ResourceManager.GetString("Error_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unavailable speaker.
        /// </summary>
        internal static string Error_Speakers {
            get {
                return ResourceManager.GetString("Error_Speakers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BASS_Start Has Not Been Successfully Called.
        /// </summary>
        internal static string Error_Start {
            get {
                return ResourceManager.GetString("Error_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some Other Mystery Error.
        /// </summary>
        internal static string Error_Unknown {
            get {
                return ResourceManager.GetString("Error_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid BASS version.
        /// </summary>
        internal static string Error_Version {
            get {
                return ResourceManager.GetString("Error_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the file is protected.
        /// </summary>
        internal static string Error_WmaLicence {
            get {
                return ResourceManager.GetString("Error_WmaLicence", resourceCulture);
            }
        }
    }
}
