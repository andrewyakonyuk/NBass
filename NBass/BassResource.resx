<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ChannelDisposedMessage" xml:space="preserve">
    <value>Channel was disposed</value>
  </data>
  <data name="Error_Already" xml:space="preserve">
    <value>Already Initialized</value>
  </data>
  <data name="Error_BassOk" xml:space="preserve">
    <value>All is OK</value>
  </data>
  <data name="Error_BufferLost" xml:space="preserve">
    <value>The Sample Buffer Was Lost - Please Report This!</value>
  </data>
  <data name="Error_Busy" xml:space="preserve">
    <value>The device is busy (eg. in \"exclusive\" use by another process)</value>
  </data>
  <data name="Error_CDInit" xml:space="preserve">
    <value>BASS_CDInit Has Not Been Successfully Called</value>
  </data>
  <data name="Error_CDTrack" xml:space="preserve">
    <value>Can't Play the Selected CD Track"</value>
  </data>
  <data name="Error_CDVolume" xml:space="preserve">
    <value>CD Has No Volume Control</value>
  </data>
  <data name="Error_Codec" xml:space="preserve">
    <value>Codec is not available/supported</value>
  </data>
  <data name="Error_Create" xml:space="preserve">
    <value>Couldn't create the file</value>
  </data>
  <data name="Error_Decode" xml:space="preserve">
    <value>The channel is a 'decoding channel'</value>
  </data>
  <data name="Error_Device" xml:space="preserve">
    <value>Illegal Device Number</value>
  </data>
  <data name="Error_Driver" xml:space="preserve">
    <value>Can't Find a Free Sound Driver</value>
  </data>
  <data name="Error_Empty" xml:space="preserve">
    <value>The MOD music has no sequence data</value>
  </data>
  <data name="Error_Ended" xml:space="preserve">
    <value>The channel/file has ended</value>
  </data>
  <data name="Error_FileFormat" xml:space="preserve">
    <value>Unsupported file format</value>
  </data>
  <data name="Error_FileOpen" xml:space="preserve">
    <value>Can't Open the File</value>
  </data>
  <data name="Error_Format" xml:space="preserve">
    <value>Unsupported Format</value>
  </data>
  <data name="Error_Freq" xml:space="preserve">
    <value>Illegal Sample Rate</value>
  </data>
  <data name="Error_Handle" xml:space="preserve">
    <value>Invalid Handle</value>
  </data>
  <data name="Error_IllParam" xml:space="preserve">
    <value>An Illegal Parameter Was Specified</value>
  </data>
  <data name="Error_IllType" xml:space="preserve">
    <value>An Illegal Type Was Specified</value>
  </data>
  <data name="Error_Init" xml:space="preserve">
    <value>BASS.Init Has Not Been Successfully Called</value>
  </data>
  <data name="Error_InitCD" xml:space="preserve">
    <value>Can't Initialize CD</value>
  </data>
  <data name="Error_Memory" xml:space="preserve">
    <value>Memory Error</value>
  </data>
  <data name="Error_No3d" xml:space="preserve">
    <value>No 3D Support</value>
  </data>
  <data name="Error_NoA3D" xml:space="preserve">
    <value>A3D.DLL is Not Installed</value>
  </data>
  <data name="Error_NoCD" xml:space="preserve">
    <value>No CD in drive</value>
  </data>
  <data name="Error_NoChannel" xml:space="preserve">
    <value>Can't Get a Free Channel</value>
  </data>
  <data name="Error_NoEAX" xml:space="preserve">
    <value>No EAX Support</value>
  </data>
  <data name="Error_NoFX" xml:space="preserve">
    <value>Effects are not enabled</value>
  </data>
  <data name="Error_NoHW" xml:space="preserve">
    <value>No Hardware Voices Available</value>
  </data>
  <data name="Error_NoNet" xml:space="preserve">
    <value>No Internet connection could be opened</value>
  </data>
  <data name="Error_NoPause" xml:space="preserve">
    <value>Not Paused</value>
  </data>
  <data name="Error_NoPlay" xml:space="preserve">
    <value>Not Playing</value>
  </data>
  <data name="Error_NotAudio" xml:space="preserve">
    <value>Not An Audio Track</value>
  </data>
  <data name="Error_NotAvailable" xml:space="preserve">
    <value>The requested data is not available</value>
  </data>
  <data name="Error_NotFile" xml:space="preserve">
    <value>The Stream is Not a File Stream (WAV/MP3)</value>
  </data>
  <data name="Error_Playing" xml:space="preserve">
    <value>The channel is playing</value>
  </data>
  <data name="Error_Position" xml:space="preserve">
    <value>Invalid Playback Position</value>
  </data>
  <data name="Error_Speakers" xml:space="preserve">
    <value>Unavailable speaker</value>
  </data>
  <data name="Error_Start" xml:space="preserve">
    <value>BASS_Start Has Not Been Successfully Called</value>
  </data>
  <data name="Error_Unknown" xml:space="preserve">
    <value>Some Other Mystery Error</value>
  </data>
  <data name="Error_Version" xml:space="preserve">
    <value>Invalid BASS version</value>
  </data>
  <data name="Error_WmaLicence" xml:space="preserve">
    <value>the file is protected</value>
  </data>
</root>